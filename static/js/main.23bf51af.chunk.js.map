{"version":3,"sources":["components/Links.js","pages/Home/Home.js","pages/Play/TicTacToe/TicTacToe.js","pages/Play/Duke/Duke.js","components/Grid.js","pages/Play/Duke/Board.js","pages/Play/Game.js","pages/Play/Play.js","components/Exporter.js","assets/icons/MoveIconPath.js","assets/icons/DreadIconPath.js","assets/icons/StrikeIconPath.js","assets/icons/StartIconPath.js","assets/icons/CommandIconPath.js","assets/icons/DefenseIconPath.js","assets/icons/SlideIconPath.js","constants/moveTypes.js","components/GridSquare.js","components/Tile.js","components/EditableTile.js","components/NonEditableTile.js","pages/TileCreator/MovePalette.js","pages/TileCreator/TileCreator.js","pages/BagBuilder/BagBuilder.js","components/TopNav.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Links","className","href","Home","src","logo","alt","Duke","name","setup","boardHeight","boardWidth","cells","Array","fill","map","itemY","y","itemX","x","turn","moveLimit","moves","A","G","ctx","useStyles","makeStyles","theme","root","display","height","width","tileGrid","borderWidth","flex","flexDirection","gridRow","Grid","renderGridSpace","classes","useTheme","item","key","Board","props","console","log","style","Game","Client","game","board","DukeBoard","justifyContent","alignItems","Play","exportAsPng","printRef","a","element","current","html2canvas","canvas","data","toDataURL","link","document","createElement","download","body","appendChild","click","removeChild","window","open","d","transform","MOVE_TYPE_ENUM","MOVE_TYPES","type","definition","getIcon","SvgIcon","palette","common","white","stroke","primary","main","strokeWidth","viewBox","DefenseIconPath","StartIconPath","MoveIconPath","DreadIconPath","StrikeIconPath","SlideIconPath","parent","CommandIconPath","gridSquare","border","bordercolor","color","transition","backgroundColor","GridSquare","onClick","gridSquareClass","moveData","filter","move","renderIcon","length","Tile","React","forwardRef","ref","onFlip","tileData","renderGrid","currentSide","tileContainer","tileLeft","tileName","Typography","title","tileRight","tileIcon","icon","tileColumn","margin","borderCollapse","red","EditableTile","tile","onEditGridSquare","activeMoves","sides","movesAtXY","movePalette","borderRadius","flexWrap","padding","movePaletteButton","MovePalette","selectedMoveType","setMoveType","parentMoves","has","isCollapsed","moveType","childMoves","findIndex","i","get","Tooltip","Chip","variant","label","Collapse","in","childMove","paletteColumn","editableTileContainer","tileSideIndicator","textAlign","marginTop","tileSideLabel","TileCreator","useState","side","setSide","flipTile","editable","setTile","tileComponentRef","useRef","Button","marginRight","newTileData","cloneDeep","filtered","eraseMove","newMove","moveFound","push","addMove","BagBuilder","flexGrow","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","ButtonAppBar","setOpen","AppBar","position","Toolbar","IconButton","aria-label","edge","Link","underline","Drawer","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","pageVariants","initial","opacity","out","basename","render","location","exitBeforeEnter","pathname","exact","path","component","div","animate","exit","variants","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.23bf51af.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Links() {\r\n  return (\r\n    <div>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"/the_duchess_boardgame\"\r\n        >\r\n          Home\r\n        </a>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"/the_duchess_boardgame/#/play\"\r\n        >\r\n          Play\r\n        </a>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"/the_duchess_boardgame/#/create\"\r\n        >\r\n          Tile Creator\r\n        </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport '../../App.css';\r\nimport Links from '../../components/Links';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/Home.js</code> and save to reload.\r\n        </p>\r\n        <Links />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { INVALID_MOVE } from 'boardgame.io/core';\r\n\r\n\r\n// Return true if `cells` is in a winning configuration.\r\nfunction IsVictory(cells) {\r\n  const positions = [\r\n    [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6],\r\n    [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]\r\n  ];\r\n\r\n  const isRowComplete = row => {\r\n    const symbols = row.map(i => cells[i]);\r\n    return symbols.every(i => i !== null && i === symbols[0]);\r\n  };\r\n\r\n  return positions.map(isRowComplete).some(i => i === true);\r\n}\r\n\r\n// Return true if all `cells` are occupied.\r\nfunction IsDraw(cells) {\r\n  return cells.filter(c => c === null).length === 0;\r\n}\r\n\r\nexport const TicTacToe = {\r\n  setup: () => ({ cells: Array(9).fill(null) }),\r\n\r\n  endIf: (G, ctx) => {\r\n    if (IsVictory(G.cells)) {\r\n      return { winner: ctx.currentPlayer };\r\n    }\r\n    if (IsDraw(G.cells)) {\r\n      return { draw: true };\r\n    }\r\n  },\r\n  \r\n  turn: {\r\n    moveLimit: 1,\r\n  },\r\n\r\n  moves: {\r\n    clickCell: (G, ctx, id) => {\r\n      if (G.cells[id] !== null) {\r\n        return INVALID_MOVE;\r\n      }\r\n      G.cells[id] = ctx.currentPlayer;\r\n    }\r\n  },\r\n};","const boardHeight = 6;\r\nconst boardWidth = 6; \r\n\r\nexport const Duke = {\r\n  name: 'duke',\r\n\r\n  setup: () => ({ \r\n    boardHeight,\r\n    boardWidth,\r\n    cells: Array(boardHeight).fill(null).map((itemY, y) => Array(boardWidth).fill(null).map((itemX, x) => null)),\r\n  }),\r\n\r\n  turn: {\r\n    moveLimit: 1,\r\n  },\r\n\r\n  moves: {\r\n    A: (G, ctx) => { },\r\n  },\r\n};","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    // height: 600,\r\n    // width: 600,\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  tileGrid: {\r\n    display: 'flex',\r\n    // border: 'solid',\r\n    borderWidth: 1,\r\n    flex: 5,\r\n    flexDirection: 'column',\r\n  },\r\n  gridRow: {\r\n    display: 'flex',\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nfunction Grid({ height, width, renderGridSpace }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.tileGrid}>\r\n        {\r\n          Array(height).fill(null).map((item, y) => (\r\n            <div key={y} className={classes.gridRow}>\r\n              {Array(width).fill(null).map((item, x) => {\r\n                return (\r\n                // <div>{renderGridSpace(x, y, theme)}</div>\r\n                renderGridSpace(x, y, theme)\r\n                )\r\n              })}\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport Grid from '../../../components/Grid';\r\n\r\nconst Board = (props) => {\r\n  console.log(props);\r\n  \r\n  return (\r\n    <div style={{height: 600, width: 600}}>\r\n      <Grid \r\n        height={props.G.boardHeight} \r\n        width={props.G.boardWidth} \r\n        renderGridSpace={(x, y) => <div>{`${x}, ${y}`}</div>}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Board;","import { Client } from 'boardgame.io/react';\r\nimport { TicTacToe } from './TicTacToe/TicTacToe';\r\nimport TicTacToeBoard from './TicTacToe/Board';\r\nimport { Duke } from './Duke/Duke';\r\nimport DukeBoard from './Duke/Board';\r\n\r\n// const Game = Client({ \r\n//   game: TicTacToe ,\r\n//   board: TicTacToeBoard, \r\n// });\r\n\r\nconst Game = Client({ \r\n  game: Duke,\r\n  board: DukeBoard, \r\n});\r\n\r\nexport default Game;","import React from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Game from './Game';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nfunction Play() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Title</h1>\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Play;\r\n","import html2canvas from 'html2canvas';\r\n\r\nexport const exportAsPng = async (printRef) => {\r\n  const element = printRef.current;\r\n  const canvas = await html2canvas(element);\r\n\r\n  const data = canvas.toDataURL('image/png');\r\n  const link = document.createElement('a');\r\n\r\n  if (typeof link.download === 'string') {\r\n    link.href = data;\r\n    link.download = 'image.png';\r\n\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  } else {\r\n    window.open(data);\r\n  }\r\n};","import React from 'react';\r\nexport default () => <path d=\"M256 23.05C127.5 23.05 23.05 127.5 23.05 256S127.5 488.9 256 488.9 488.9 384.5 488.9 256 384.5 23.05 256 23.05z\" />","import React from 'react';\r\nexport default () => <path d=\"M255.997 16.004c-120 0-239.997 60-239.997 149.998C16 226.002 61 256 61 316c0 45-15 45-15 75 0 14.998 48.01 32.002 89.998 44.998v60h239.997v-60s90.567-27.957 90-45c-.933-27.947-15-30-15-74.998 0-30 45.642-91.42 44.998-149.998 0-90-119.998-149.998-239.996-149.998zm-90 179.997c33.137 0 60 26.864 60 60 0 33.136-26.863 60-60 60C132.863 316 106 289.136 106 256c0-33.136 26.862-60 59.998-60zm179.998 0c33.136 0 60 26.864 60 60 0 33.136-26.864 60-60 60-33.136 0-60-26.864-60-60 0-33.136 26.864-60 60-60zm-89.998 105c15 0 45 60 45 75 0 29.998 0 29.998-15 29.998h-60c-15 0-15 0-15-30 0-15 30-74.998 45-74.998z\" />","import React from 'react';\r\nexport default () => <path d=\"M256 22.017l-69.427 102.007-123.038-9.32L100 232.584l-84 90.384 114.898 44.987 18.292 122.028L256 428.2l106.81 61.783 18.292-122.028L496 322.968l-84-90.385 36.465-117.88-123.038 9.32z\" />","import React from 'react';\r\n\r\nexport default () => <path d=\"M256 54.99c-27 0-46.418 14.287-57.633 32.23-10.03 16.047-14.203 34.66-15.017 50.962-30.608 15.135-64.515 30.394-91.815 45.994-14.32 8.183-26.805 16.414-36.203 25.26C45.934 218.28 39 228.24 39 239.99c0 5 2.44 9.075 5.19 12.065 2.754 2.99 6.054 5.312 9.812 7.48 7.515 4.336 16.99 7.95 27.412 11.076 15.483 4.646 32.823 8.1 47.9 9.577-14.996 25.84-34.953 49.574-52.447 72.315C56.65 378.785 39 403.99 39 431.99c0 4-.044 7.123.31 10.26.355 3.137 1.256 7.053 4.41 10.156 3.155 3.104 7.017 3.938 10.163 4.28 3.146.345 6.315.304 10.38.304h111.542c8.097 0 14.026.492 20.125-3.43 6.1-3.92 8.324-9.275 12.67-17.275l.088-.16.08-.166s9.723-19.77 21.324-39.388c5.8-9.808 12.097-19.576 17.574-26.498 2.74-3.46 5.304-6.204 7.15-7.754.564-.472.82-.56 1.184-.76.363.2.62.288 1.184.76 1.846 1.55 4.41 4.294 7.15 7.754 5.477 6.922 11.774 16.69 17.574 26.498 11.6 19.618 21.324 39.387 21.324 39.387l.08.165.088.16c4.346 8 6.55 13.323 12.61 17.254 6.058 3.93 11.974 3.45 19.957 3.45H448c4 0 7.12.043 10.244-.304 3.123-.347 6.998-1.21 10.12-4.332 3.12-3.122 3.984-6.997 4.33-10.12.348-3.122.306-6.244.306-10.244 0-28-17.65-53.205-37.867-79.488-17.493-22.74-37.45-46.474-52.447-72.315 15.077-1.478 32.417-4.93 47.9-9.576 10.422-3.125 19.897-6.74 27.412-11.075 3.758-2.168 7.058-4.49 9.81-7.48 2.753-2.99 5.192-7.065 5.192-12.065 0-11.75-6.934-21.71-16.332-30.554-9.398-8.846-21.883-17.077-36.203-25.26-27.3-15.6-61.207-30.86-91.815-45.994-.814-16.3-4.988-34.915-15.017-50.96C302.418 69.276 283 54.99 256 54.99z\"/>","import React from 'react';\r\n\r\nexport default () => <path d=\"M256 23.57l-16.1 48.86h32.2zM73 90.43v15.97h366V90.43zm48 33.97V479l135-105 135 105V124.4zm87 37h96l-32 80 80-32v96l-80-32 32 80h-96l32-80-80 32v-96l80 32zm48 235.4l-23 17.9v73.7h46v-73.7z\" transform=\"translate(512, 0) scale(-1, 1) rotate(720, 256, 256)\"></path>\r\n","import React from 'react';\r\n\r\nexport default () => <path d=\"M23.05 23.05V488.9H488.9V23.05H23.05z\"></path>","import React from 'react';\r\n\r\nexport default () => <path d=\"M106.854 106.002a26.003 26.003 0 0 0-25.64 29.326c16 124 16 117.344 0 241.344a26.003 26.003 0 0 0 35.776 27.332l298-124a26.003 26.003 0 0 0 0-48.008l-298-124a26.003 26.003 0 0 0-10.136-1.994z\" />;\r\n","import React from 'react';\r\nimport {SvgIcon} from '@material-ui/core'\r\nimport MoveIconPath from '../assets/icons/MoveIconPath';\r\nimport DreadIconPath from '../assets/icons/DreadIconPath';\r\nimport StrikeIconPath from '../assets/icons/StrikeIconPath';\r\nimport StartIconPath from '../assets/icons/StartIconPath';\r\nimport CommandIconPath from '../assets/icons/CommandIconPath';\r\nimport DefenseIconPath from '../assets/icons/DefenseIconPath';\r\nimport SlideIconPath from '../assets/icons/SlideIconPath';\r\n\r\nexport const MOVE_TYPE_ENUM = {\r\n  FRONT: 's',\r\n  BACK: 's2',\r\n  MOVE: 'm',\r\n  JUMP_MOVE: 'jm',\r\n  DREAD: 'dr',\r\n  STRIKE: 'st',\r\n  SHOT: 'sh',\r\n  SLIDE_E: 'sl_E',\r\n  SLIDE_SE: 'sl_SE',\r\n  SLIDE_S: 'sl_S',\r\n  SLIDE_SW: 'sl_SW',\r\n  SLIDE_W: 'sl_W',\r\n  SLIDE_NW: 'sl_NW',\r\n  SLIDE_N: 'sl_N',\r\n  SLIDE_NE: 'sl_NE',\r\n  JUMP_SLIDE_E: 'jsl_E',\r\n  JUMP_SLIDE_SE: 'jsl_SE',\r\n  JUMP_SLIDE_S: 'jsl_S',\r\n  JUMP_SLIDE_SW: 'jsl_SW',\r\n  JUMP_SLIDE_W: 'jsl_W',\r\n  JUMP_SLIDE_NW: 'jsl_NW',\r\n  JUMP_SLIDE_N: 'jsl_N',\r\n  JUMP_SLIDE_NE: 'jsl_NE',\r\n  COMMAND: 'c',\r\n  DEFENSE: 'd',\r\n  EMPTY: 'empty',\r\n}\r\n\r\nconst MOVE_TYPES = [\r\n  {\r\n    type: MOVE_TYPE_ENUM.EMPTY,\r\n    name: 'Empty',\r\n    definition: \"Clear this space\",\r\n    getIcon: (theme) => <SvgIcon style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><DefenseIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.FRONT,\r\n    name: 'Front',\r\n    definition: \"The tile must start on this side.\",\r\n    getIcon: () => <SvgIcon viewBox=\"0 0 512 512\"><StartIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.BACK,\r\n    name: 'Back',\r\n    definition: \"The tile must start on the other side.\",\r\n    getIcon: (theme) => <SvgIcon style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><StartIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.MOVE,\r\n    name: 'Move',\r\n    definition: \"This icon allows a Troop Tile to move to the indicated square if there is a clear and straight path to it from the starting square (the square the tile occupies on the gameboard). If there is a friendly or enemy Troop Tile in between the starting and target squares, then the move cannot be made. Likewise, the move cannot be made if there is a friendly Troop Tile in the target square. If there is an enemy in the target square, however, the move can be made and the player captures the enemy tile.\",\r\n    getIcon: () => <SvgIcon viewBox=\"0 0 512 512\"><MoveIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_MOVE,\r\n    name: 'Jump Move',\r\n    definition: \"This icon allows a Troop Tile to move to the square shown, jumping over any Troop Tile (friend or enemy) along a shortest path from the starting square to the target square.If there is a friendly Troop Tile in the target square, the move cannot be made.If there is an enemy in the target square, the move can be made and the enemy tile is captured(see Capturing Tiles, p. 5).Nothing happens to the Troop Tiles that were jumped over.\",\r\n    getIcon: (theme) => <SvgIcon style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><MoveIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.DREAD,\r\n    name: 'Dread',\r\n    definition: \"After any movement or placement of a new tile is completed or placement of a new tile, any tile (friendly or enemy) in a square covered by a Dread icon is frozen in place.The tile cannot be moved, captured, shifted by the Command ability, or use any ability, until the Dread icon is removed(i.e.at the start of the controlling player’s turn, the Dread icon is no longer covering the previously frozen tile).The Fort(and Camelot) Tile protects against the Dread icon; a tile in the Fort(and Camelot) cannot be frozen in place, while a tile with a Dread icon inside the Fort(and Camelot) cannot freeze any tile in place outside.Additionally, any tile acting as the Duke, as well as any tile with a Dread icon, is immune to the Dread icon.\",\r\n    getIcon: () => <SvgIcon viewBox=\"0 0 512 512\"><DreadIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.STRIKE,\r\n    name: 'Strike',\r\n    definition: \"This icon allows a Troop Tile to capture from afar. Remove an enemy Troop Tile in one of the squares indicated by this icon (see Capturing Tiles, p. 5), but leave the Troop Tile in its original location; using this icon does not move the Troop Tile, but the Tile still flips.This icon has no effect on a friendly tile.\",\r\n    getIcon: (theme) => <SvgIcon style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><StrikeIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SHOT,\r\n    name: 'Shot',\r\n    definition: \"This is similar to the Strike icon. This icon allows a Troop Tile to capture from afar, but only if the Troop Tile has a clear path to the enemy Troop Tile.\",\r\n    getIcon: () => <SvgIcon viewBox=\"0 0 512 512\"><StrikeIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_E,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(0)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_SE,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(45)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_S,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(90)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_SW,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(135)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_W,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(180)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_NW,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(225)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_N,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(270)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.SLIDE_NE,\r\n    name: 'Slide',\r\n    definition: \"This icon allows a Troop Tile to move any number of squares in the direction shown, as long as it has a clear path.The Troop Tile may not jump over any pieces.If it ends its turn in an opponent’s square, the controlling player captures that piece(see Capturing Tiles, p. 5); it cannot end its movement in a square occupied by a friendly tile.\",\r\n    getIcon: () => <SvgIcon transform=\"rotate(315)\" viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(0)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_SE,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(45)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_S,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(90)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_SW,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(135)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_W,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(180)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_NW,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(225)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_N,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(270)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.JUMP_SLIDE_NE,\r\n    name: 'Jump Slide',\r\n    definition: \"This icon follows the exact rules for Slide, with the following addition: this icon allows a Troop Tile to move in the direction of the Jump Slide icon and completely ignore any tile that might be adjacent, along the direction indicated. (This will not allow a tile to Jump Slide past the Mountain Tile.)\",\r\n    getIcon: (theme) => <SvgIcon transform=\"rotate(315)\" style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><SlideIconPath /></SvgIcon>,\r\n    parent: MOVE_TYPE_ENUM.JUMP_SLIDE_E,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.COMMAND,\r\n    name: 'Command',\r\n    definition: \"A Troop Tile with these symbols can move other Troop Tiles around it. Instead of moving this Troop Tile, the player moves one of the Troop Tiles he controls from any square indicated by one of these symbols to any other square indicated by one of these symbols; though this tile does not move, it still flips, as always.If the Troop Tile that was moved ends its turn in a square occupied by an enemy tile, capture that tile(see Capturing Tiles, at right); a tile cannot end its move in a square occupied by a friendly tile. The Mountain Tile(see p. 8) does not block Command movement in any way(a tile still cannot end its movement in a Mountain Tile).No other tiles block a Command move in any way; the moving tile simply can move from any square with the Command icon to any other square with the Command icon.\",\r\n    getIcon: () => <SvgIcon viewBox=\"0 0 512 512\"><CommandIconPath /></SvgIcon>,\r\n    // getIcon: (theme) => <SvgIcon style={{ fill: theme.palette.common.white, stroke: theme.palette.primary.main, strokeWidth: 40 }} viewBox=\"0 0 512 512\"><DefenseIconPath /></SvgIcon>,\r\n  },\r\n  {\r\n    type: MOVE_TYPE_ENUM.DEFENSE,\r\n    name: 'Defense',\r\n    definition: \"A tile cannot capture a target tile if its straight move towards or into the target square would pass through a square with  a Defense icon as indicated on the target tile; even if the tile starts the turn adjacent to the target tile, if the square it starts  on indicates a Defense icon on that tile, the target cannot be captured.   If a move into a target square using a Jump icon can be achieved with a straight line move, then in the instance of a   Defense icon on the target tile potentially blocking that move, that straight line must be used and hence is blocked; i.e.you   cannot take a non- straight line to the target.However, if there is no straight line move to the target square, then the player   can use which ever path can move around the Defense icon.   The Strike icon follows the same rules as Jump / Jump Slide icon; i.e.if there is a straight line attack to the target hex,   that must be chosen and so if a Defense icon is along that path, it blocks the Strike icon.But if there is a non - straight path  to the target, than the Strike icon can be used to capture the target.   Note that Command can always move a tile and capture the target tile, regardless of Defense icons\",\r\n    getIcon: () => <SvgIcon viewBox=\"0 0 512 512\"><DefenseIconPath /></SvgIcon>,\r\n  },\r\n];\r\n\r\nexport default MOVE_TYPES;\r\n","import React from 'react'; \r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MOVE_TYPES from '../constants/moveTypes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridSquare: {\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    bordercolor: theme.palette.primary.main,\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    transition: '0.4s',\r\n    height: '100%',\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      stroke: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction GridSquare({ onClick, type, gridSquareClass = false }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  if (!gridSquareClass) gridSquareClass = classes.gridSquare\r\n  const moveData = MOVE_TYPES.filter((move) => move.type === type);\r\n  let renderIcon = () => null;\r\n  if (moveData.length) renderIcon = () => moveData[0].getIcon(theme);\r\n\r\n  return (\r\n    <div onClick={onClick} className={gridSquareClass}>\r\n      {renderIcon()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GridSquare;","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport Grid from './Grid';\r\nimport GridSquare from './GridSquare';\r\n\r\nconst Tile = React.forwardRef(({ onFlip, tileData, currentSide, renderGrid}, ref) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div ref={ref} className={classes.tileContainer}>\r\n      <div className={classes.tileLeft}>\r\n        <div className={classes.tileGrid}>\r\n          {renderGrid()}\r\n        </div>\r\n        <div className={classes.tileName}>\r\n          <Typography className={classes.title}>\r\n            {tileData.name}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      <div className={classes.tileRight}>\r\n        <div className={classes.tileIcon}>\r\n          {tileData.icon()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tileColumn: {\r\n    display: 'flex',\r\n    flex: 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  tileContainer: {\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    height: 300,\r\n    margin: 10,\r\n    width: 300,\r\n  },\r\n  tileLeft: {\r\n    display: 'flex',\r\n    flex: 3,\r\n    flexDirection: 'column',\r\n  },\r\n  tileRight: {\r\n    display: 'flex',\r\n    flex: 1,\r\n  },\r\n  tileGrid: {\r\n    display: 'flex',\r\n    flex: 3,\r\n    flexDirection: 'column',\r\n  },\r\n  gridRow: {\r\n    display: 'flex',\r\n    flex: 1,\r\n  },\r\n  gridSquare: {\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    transition: '0.4s',\r\n    height: '100%',\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      stroke: theme.palette.common.white,\r\n    },\r\n  },\r\n  tileName: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n  },\r\n  tileIcon: {\r\n    border: 'solid',\r\n    borderCollapse: 'collapse',\r\n    borderWidth: 1,\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport default Tile;","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport BasicGrid from './Grid';\r\nimport GridSquare from './GridSquare';\r\nimport Tile from './Tile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridSquare: {\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    bordercolor: theme.palette.primary.main,\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    transition: '0.4s',\r\n    height: '100%',\r\n    width: '100%',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.common.white,\r\n      stroke: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditableTile = React.forwardRef(({onFlip, tile, currentSide, onEditGridSquare}, ref) => {\r\n  const classes = useStyles();\r\n  const activeMoves = tile.sides[currentSide].moves;\r\n\r\n  return (\r\n    <Tile\r\n      ref={ref}\r\n      onFlip={onFlip}\r\n      tileData={tile}\r\n      currentSide={currentSide}\r\n      renderGrid={() => {\r\n        return (\r\n          <BasicGrid\r\n            height={tile.height}\r\n            width={tile.width}\r\n            renderGridSpace={(x, y, theme) => {\r\n              const movesAtXY = activeMoves.filter((move) => move.x === x && move.y === y);\r\n              const type = movesAtXY.length ? movesAtXY[0].type : null\r\n              const handleClick = () => onEditGridSquare(x, y);\r\n              return <GridSquare key={`${x}${y}`} onClick={handleClick} type={type} gridSquareClass={classes.gridSquare}/>\r\n            }}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n})\r\n\r\nexport default EditableTile;","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport BasicGrid from './Grid';\r\nimport GridSquare from './GridSquare';\r\nimport Tile from './Tile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridSquare: {\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    bordercolor: theme.palette.primary.main,\r\n    color: theme.palette.primary.main,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    transition: '0.4s',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  red: {backgroundColor: 'red'}\r\n}));\r\n\r\nconst NonEditableTile = ({onFlip, tile, currentSide}) => {\r\n  const classes = useStyles();\r\n  const activeMoves = tile.sides[currentSide].moves;\r\n\r\n  return (\r\n    <Tile\r\n      onFlip={onFlip}\r\n      tileData={tile}\r\n      currentSide={currentSide}\r\n      renderGrid={() => {\r\n        return (\r\n          <BasicGrid\r\n            height={tile.height}\r\n            width={tile.width}\r\n            renderGridSpace={(x, y, theme) => {\r\n              const movesAtXY = activeMoves.filter((move) => move.x === x && move.y === y);\r\n              const type = movesAtXY.length ? movesAtXY[0].type : null\r\n              return <GridSquare key={`${x}${y}`} type={type} gridSquareClass={classes.gridSquare}/>\r\n            }}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n  }\r\n\r\nexport default NonEditableTile;","import React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Tooltip, Collapse } from '@material-ui/core';\r\nimport { get, has, findIndex } from 'lodash';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MOVE_TYPES from '../../constants/moveTypes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  movePalette: {\r\n    border: 'solid',\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flexDirection: 'column',\r\n    margin: 20,\r\n    padding: 20,\r\n  },\r\n  movePaletteButton: {\r\n    margin: 10,\r\n  },\r\n}));\r\n\r\nexport default function MovePalette({ selectedMoveType, setMoveType }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const parentMoves = MOVE_TYPES.filter((move) => !has(move, 'parent', false));\r\n  const isCollapsed = (moveType, childMoves) => (selectedMoveType === moveType) || findIndex(childMoves, { type: selectedMoveType }) > -1;\r\n  return (\r\n    <div className={classes.movePalette}>\r\n      {\r\n        parentMoves.map((move, i) => {\r\n          const childMoves = MOVE_TYPES.filter((item) => get(item, 'parent', false) === move.type);\r\n          return (\r\n            <div key={i} className={classes.movePaletteButton}>\r\n              <Tooltip title={move.definition}>\r\n                <Chip\r\n                  variant={move.type === selectedMoveType ? 'default' : 'outlined'}\r\n                  color=\"primary\"\r\n                  icon={move.getIcon(theme)}\r\n                  label={move.name}\r\n                  onClick={() => setMoveType(move.type)}\r\n                />\r\n              </Tooltip>\r\n              <Collapse in={isCollapsed(move.type, childMoves)}>\r\n                <div>\r\n                  {\r\n                    childMoves.map((childMove, i) => {\r\n                      return (\r\n                        <div key={i} className={classes.movePaletteButton}>\r\n                          <Chip\r\n                            variant={childMove.type === selectedMoveType ? 'default' : 'outlined'}\r\n                            color=\"primary\"\r\n                            icon={childMove.getIcon(theme)}\r\n                            label={childMove.name}\r\n                            onClick={() => setMoveType(childMove.type)}\r\n                          />\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </Collapse>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\r\nimport { Button } from '@material-ui/core';\r\nimport {cloneDeep, get} from 'lodash';\r\nimport { exportAsPng } from '../../components/Exporter';\r\nimport BasicGrid from '../../components/Grid';\r\nimport GridSquare from '../../components/GridSquare';\r\nimport Tile from '../../components/Tile';\r\nimport NonEditableTile from '../../components/NonEditableTile';\r\nimport EditableTile from '../../components/EditableTile';\r\nimport MovePalette from './MovePalette';\r\nimport {MOVE_TYPE_ENUM} from '../../constants/moveTypes';\r\n\r\nfunction TileCreator() {\r\n  const classes = useStyles();\r\n  const [moveType, setMoveType] = React.useState('m');\r\n  const [side, setSide] = React.useState(0);\r\n  const flipTile = () => {\r\n    setSide(1 - side)\r\n  }\r\n  \r\n  const tileData = {\r\n    name: 'Footman',\r\n    icon: () => <BrightnessHighIcon />,\r\n    height: 5,\r\n    width: 5,\r\n    sides: [\r\n      // side 1\r\n      {\r\n        moves: [\r\n          {\r\n            x: 2,\r\n            y: 2,\r\n            type: 's',\r\n            editable: false,\r\n          },\r\n        ],\r\n      },\r\n      // side 2\r\n      {\r\n        moves: [\r\n          {\r\n            x: 2,\r\n            y: 2,\r\n            type: 's2',\r\n            editable: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  }\r\n\r\n  const [tile, setTile] = React.useState(tileData);\r\n  const activeMoves = tile.sides[side].moves;\r\n\r\n  const eraseMove = (x, y, newTileData) => {\r\n    const filtered = newTileData.sides[side].moves.filter((move, i) => {\r\n      return !(move.x === x && move.y === y)\r\n    })\r\n    newTileData.sides[side].moves = filtered\r\n\r\n    setTile(newTileData);\r\n  }\r\n\r\n  const addMove = (x, y, newTileData) => {\r\n    const newMove = { x, y, type: moveType }\r\n    let moveFound = false;\r\n    newTileData.sides[side].moves = newTileData.sides[side].moves.map((move, i) => {\r\n      if (move.x === x && move.y === y) {\r\n        moveFound = true;\r\n        move.type = moveType;\r\n      }\r\n      return move;\r\n    })\r\n\r\n    if (!moveFound) {\r\n      newTileData.sides[side].moves.push(newMove);\r\n    }\r\n\r\n    setTile(newTileData);\r\n  }\r\n\r\n  const handleEditGridSquare = (x, y) => {\r\n    let newTileData = cloneDeep(tile);\r\n    if (moveType === MOVE_TYPE_ENUM.EMPTY) eraseMove(x, y, newTileData)\r\n    else addMove(x, y, newTileData)\r\n  };\r\n\r\n  const tileComponentRef = React.useRef();\r\n  const handleExportAsPng = () => exportAsPng(tileComponentRef)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.paletteColumn}>\r\n        <MovePalette selectedMoveType={moveType} setMoveType={setMoveType} />\r\n      </div>\r\n      <div className={classes.tileColumn}>\r\n        <h1>Tile Creator</h1>\r\n        <Button\r\n          variant=\"contained\"\r\n          color='secondary'\r\n          onClick={handleExportAsPng}\r\n        >\r\n          Export as PNG\r\n        </Button>\r\n        <div className={classes.tileSideIndicator}>\r\n          <Typography style={{marginRight: 10}}>Side {side + 1}</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color='secondary'\r\n            onClick={flipTile}\r\n          >\r\n            Flip\r\n          </Button>\r\n          </div>\r\n        <EditableTile\r\n          ref={tileComponentRef}\r\n          onFlip={flipTile} \r\n          onEditGridSquare={handleEditGridSquare} \r\n          currentSide={side} \r\n          tile={tile} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap-reverse',\r\n  },\r\n  paletteColumn: {\r\n    flex: 1,\r\n  },\r\n  tileColumn: {\r\n    display: 'flex',\r\n    flex: 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  editableTileContainer: {\r\n    display: 'flex',\r\n  },\r\n  tileLeft: { \r\n    display: 'flex', \r\n    flex: 5,\r\n    flexDirection: 'column',\r\n  },\r\n  tileRight: {\r\n    display: 'flex', \r\n    flex: 1,\r\n  },\r\n  tileGrid: {\r\n    display: 'flex',\r\n    flex: 5,\r\n    flexDirection: 'column',\r\n  },\r\n  gridRow: {\r\n    display: 'flex',\r\n    flex: 1,\r\n  },\r\n  tileName: {\r\n    height: '22mm',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tileSideIndicator: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    padding: 10,\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  tileIcon: {\r\n    border: 'solid',\r\n    borderCollapse: 'collapse',\r\n    borderWidth: 1,\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  tileSideLabel: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    padding: 10,\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport default TileCreator;\r\n","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport '../../App.css';\r\nimport Links from '../../components/Links';\r\n\r\nfunction BagBuilder() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/BagBuilder.js</code> and save to reload.\r\n        </p>\r\n        <Links />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BagBuilder;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Link from '@material-ui/core/Link';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const preventDefault = (event) => event.preventDefault();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={!open ? classes.menuButton : classes.hide}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link href=\"/the_duchess_boardgame\" color=\"inherit\" underline='none'>\r\n              The Duchess\r\n            </Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link href=\"/the_duchess_boardgame\" color=\"inherit\" underline='none' >\r\n            <ListItem button>\r\n              <ListItemIcon><HomeIcon /></ListItemIcon>\r\n              <ListItemText primary={'Home'} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link href=\"/the_duchess_boardgame/#/play\" color=\"inherit\" underline='none' >\r\n            <ListItem button>\r\n              <ListItemIcon><SportsEsportsIcon /></ListItemIcon>\r\n              <ListItemText primary={'Play'} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link href=\"/the_duchess_boardgame/#/create\" color=\"inherit\" underline='none' >\r\n            <ListItem button>\r\n              <ListItemIcon><AddBoxIcon /></ListItemIcon>\r\n              <ListItemText primary={'Tile Creator'} />\r\n            </ListItem>\r\n          </Link>\r\n          <Link href=\"/the_duchess_boardgame/#/build\" color=\"inherit\" underline='none' >\r\n            <ListItem button>\r\n              <ListItemIcon><LocalMallIcon /></ListItemIcon>\r\n              <ListItemText primary={'Bag Builder'} />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport Home from './pages/Home/Home';\r\nimport Play from './pages/Play/Play';\r\nimport TileCreator from './pages/TileCreator/TileCreator';\r\nimport BagBuilder from './pages/BagBuilder/BagBuilder';\r\nimport TopNav from './components/TopNav';\r\n\r\nconst pageVariants = {\r\n  initial: {\r\n    opacity: 0,\r\n  },\r\n  in: {\r\n    opacity: 1,\r\n  },\r\n  out: {\r\n    opacity: 0,\r\n  },\r\n}\r\n\r\nexport default () => (\r\n  <Router basename='/the_duchess_boardgame'>\r\n    <TopNav />\r\n    <Route\r\n      render={({ location }) => (\r\n        <AnimatePresence exitBeforeEnter initial={true}>\r\n          <Switch location={location} key={location.pathname}>\r\n            <Route exact path=\"/\" component={\r\n              () => (\r\n                <motion.div\r\n                  initial=\"initial\"\r\n                  animate=\"in\"\r\n                  exit=\"out\"\r\n                  variants={pageVariants}\r\n                >\r\n                  <Home />\r\n                </motion.div>\r\n                )\r\n            } />\r\n            <Route path=\"/play\" component={\r\n              () => (\r\n                <motion.div\r\n                  initial=\"initial\"\r\n                  animate=\"in\"\r\n                  exit=\"out\"\r\n                  variants={pageVariants}\r\n                >\r\n                  <Play />\r\n                </motion.div>\r\n                )\r\n            } />\r\n            <Route path=\"/create\" component={\r\n              () => (\r\n                <motion.div\r\n                  initial=\"initial\"\r\n                  animate=\"in\"\r\n                  exit=\"out\"\r\n                  variants={pageVariants}\r\n                >\r\n                  <TileCreator />\r\n                </motion.div>\r\n                )\r\n            } />\r\n            <Route path=\"/build\" component={\r\n              () => (\r\n                <motion.div\r\n                  initial=\"initial\"\r\n                  animate=\"in\"\r\n                  exit=\"out\"\r\n                  variants={pageVariants}\r\n                >\r\n                  <BagBuilder />\r\n                </motion.div>\r\n                )\r\n            } />\r\n          </Switch>\r\n        </AnimatePresence>\r\n      )}\r\n    />\r\n  </Router>\r\n)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}